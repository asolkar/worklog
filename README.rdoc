== About

_Worklog_ is a cloud based tool, built with Ruby on Rails, that helps you keep track of work

== Build Status

{<img src="https://travis-ci.org/asolkar/worklog.png?branch=master" alt="Build Status" />}[https://travis-ci.org/asolkar/worklog]

{<img src="https://www.codeship.io/projects/c6d1e9d0-f108-0130-e52a-42d7abe29351/status" alt="Build Status" />}[https://www.codeship.io/projects/6290]

== Features

Here are a few of _Worklog_ features

* Google+ Sign in or native accounts
* Multiple logs to track multiple work contexts
* Tags that work across logs

=== Planned Features

Following features are in the pipeline

* Search

== Installation (Heroku)

Easiest way to install Worklog is on Heroku. Here is a short summary of steps involved:

* Get the source code. Best way to get the source code is to clone this repository

    % git clone git@github.com:asolkar/worklog.git

* To work with Heroku you will need to create an account on
  Heroku[http://heroku.com]. You will also need the Heroku command line client
  which can be obtained from Heroku Toolbelt[https://toolbelt.heroku.com] site.
  You can also get the client via the +heroku+ gem (although this is not recommended):

    % gem install heroku

* Once you have +heroku+, you can login with your Heroku credentials:

    % heroku login
    Enter your Heroku credentials.
    Email: <Your email>
    Password (typing will be hidden): <Your password>
    Authentication successful.

* Upon logging in you can create an app. It is best to first navigate into
  app's directory before invoking heroku:

    % cd worklog
    % heroku apps:create
    Creating agile-ravine-7806... done, stack is cedar
    http://agile-ravine-7806.herokuapp.com/ | git@heroku.com:agile-ravine-7806.git
    Git remote heroku added

  Since we run the above command in the app directory, heroku adds a +remote+
  in your +git+ configuration that points to the new Heroku app.

  Note down the URL to the Heroku app -
  <tt>http://agile-ravine-7806.herokuapp.com</tt>
  in this case

    % git config -l
    user.name=Your Name
    user.email=you@domain.com
    core.repositoryformatversion=0
    core.filemode=true
    core.bare=false
    core.logallrefupdates=true
    remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
    remote.origin.url=git@github.com:asolkar/worklog.git
    branch.master.remote=origin
    branch.master.merge=refs/heads/master
    remote.heroku.url=git@heroku.com:agile-ravine-7806.git
    remote.heroku.fetch=+refs/heads/*:refs/remotes/heroku/*

* Add a Postgres database to store application data

    % heroku addons:add heroku-postgresql:dev
    Adding heroku-postgresql:dev on agile-ravine-7806... done, v3 (free)
    Attached as HEROKU_POSTGRESQL_AMBER_URL
    Database has been created and is available
     ! This database is empty. If upgrading, you can transfer
     ! data from another database with pgbackups:restore.
    Use `heroku addons:docs heroku-postgresql:dev` to view documentation.

* _Worklog_ supports both native accounts and Google+ Sign-in to authenticate
  users. It is highly recommended to use Google+ Sign-in when installing on
  Heroku. If you use native accounts, you will need some kind of storate (AWS,
  etc.) to store avatars.

  To use Google+ Sign-in, you will need to register your app with Google and
  get a _Client ID_ and a _Client Secret_. You can do so at
  API Console[https://code.google.com/apis/console].

  Once you have created the Client ID (of type 'Web Application'), be sure to
  change the 'Authorized Redirect URIs' section to:

    <Heroku app URL>/google_plus_sign_in/connect

  from it's default.

* Add Google Client ID and Client Secret to Heroku App's configuration. Also
  Worklog name of your choice to the configuration

    % heroku config:add APP_NAME=Worklog GPLUS_CLIENT_ID=<Client ID> GPLUS_CLIENT_SECRET=<Client Secret>

* At this point, you are ready to deploy your app

    % git push heroku master
    Counting objects: 686, done.
    Delta compression using up to 4 threads.
    Compressing objects: 100% (244/244), done.
    Writing objects: 100% (686/686), 178.75 KiB, done.
    Total 686 (delta 422), reused 686 (delta 422)

    -----> Ruby/Rails app detected
    -----> Using Ruby version: ruby-1.9.3
    -----> Installing dependencies using Bundler version 1.3.2

    ....


    -----> Compiled slug size: 25.1MB
    -----> Launching... done, v6
           http://agile-ravine-7806.herokuapp.com deployed to Heroku

    To git@heroku.com:agile-ravine-7806.git
     * [new branch]      master -> master

  Note that some errors at <tt>rake assets:precompile</tt> stage are expected

* Before heading over to the app, initialize the database:

    % heroku run:detached rake db:migrate
    Running `rake db:migrate` detached... up, run.5639
    Use `heroku logs -p run.5639` to view the output.
    % heroku logs -p run.5639
    2013-03-16T01:44:33+00:00 heroku[run.5639]: Starting process with command `bundle exec rake db:migrate`
    2013-03-16T01:44:34+00:00 heroku[run.5639]: State changed from starting to up

    .....

    2013-03-16T01:44:50+00:00 heroku[run.5639]: Process exited with status 0
    2013-03-16T01:44:50+00:00 heroku[run.5639]: State changed from up to complete

* Once database is initialized, the app should be ready to use. In your
  browser, navigate to the Heroku app URL noted when you created the app.

